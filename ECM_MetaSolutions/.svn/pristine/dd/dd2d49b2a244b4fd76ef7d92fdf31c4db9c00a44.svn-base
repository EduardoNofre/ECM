package com.br.meta.ecm.view;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DragGestureEvent;
import java.awt.dnd.DragGestureListener;
import java.awt.dnd.DragSourceDragEvent;
import java.awt.dnd.DragSourceDropEvent;
import java.awt.dnd.DragSourceEvent;
import java.awt.dnd.DragSourceListener;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.awt.dnd.DropTargetListener;
import java.io.IOException;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

public class FrameCheckList implements DragGestureListener, DragSourceListener,
		DropTargetListener, Transferable {

	@Override
	public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
		
		return null;
	}

	@Override
	public DataFlavor[] getTransferDataFlavors() {
		return null;
	}

	@Override
	public boolean isDataFlavorSupported(DataFlavor flavor) {
		return false;
	}

	@Override
	public void dragEnter(DropTargetDragEvent dtde) {
	}

	@Override
	public void dragExit(DropTargetEvent dte) {

	}

	@Override
	public void dragOver(DropTargetDragEvent dtde) {

	}

	@Override
	public void drop(DropTargetDropEvent dtde) {

	}

	@Override
	public void dropActionChanged(DropTargetDragEvent dtde) {

	}

	@Override
	public void dragDropEnd(DragSourceDropEvent dsde) {

	}

	@Override
	public void dragEnter(DragSourceDragEvent dsde) {

	}

	@Override
	public void dragExit(DragSourceEvent dse) {

	}

	@Override
	public void dragOver(DragSourceDragEvent dsde) {

	}

	@Override
	public void dropActionChanged(DragSourceDragEvent dsde) {

	}

	@Override
	public void dragGestureRecognized(DragGestureEvent dge) {

	}

	
	/**
	 * 
	 * @return JPanel
	 * 
	 * Painel de fundo
	 */
	private static JPanel fundoPainelChk() {

		JPanel pss = new JPanel();
		
		pss.setBackground(new java.awt.Color(255, 255, 255));

		return pss;
	}
	
	public static JFrame principalFrameCheckList() {
		
		JFrame frame = new JFrame();	
		
		FrameCheckList frameCheckList = new FrameCheckList();
		
		// logo
		JPanel LogoMetaJpanel = new JPanel();
		ImageIcon img = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\logo.gif");		
		JLabel logoMeta = new JLabel(img);
		LogoMetaJpanel.add(logoMeta);
		LogoMetaJpanel.setBackground(new java.awt.Color(255, 255, 255));	
		LogoMetaJpanel.setBounds(10, 10, 300, 100);
		
		
		
		
		JPanel fundoChk = frameCheckList.fundoPainelChk();	
		frame.add(LogoMetaJpanel);	
		frame.add(fundoChk);
		

		return frame;
	}

	public void iniChk() {

		JFrame frame = principalFrameCheckList();
		frame.setSize(1665, 1000);
		frame.setVisible(true);
		
	}

}
