package com.br.meta.ecm.painel;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

public class CheckListPainel {

	final static JPanel analiseQuantitativa = new JPanel();

	public static JLabel labelProposta; 
	public static JLabel labelDocumento;
	public static JLabel labelIconimageIconExames;
	public static JLabel labelconComprovante;
	public static JLabel labelIconimageIconDeclaracao;

	public static ImageIcon imageIconProposta;
	public static ImageIcon imageIconDocumento;
	public static ImageIcon imageIconComprovante;
	public static ImageIcon imageIconExames;
	public static ImageIcon imageIconDeclaracao;


	public static boolean question1 = false;
	public static boolean question2 = false;
	public static boolean question3 = false;
	public static boolean question4 = false;
	public static boolean question5 = false;
	public static boolean question6 = false;

	public JScrollPane checkListQuestions() {


		analiseQuantitativa.setLayout(new GridBagLayout());

		GridBagConstraints c = new GridBagConstraints();

		analiseQuantitativa.setAutoscrolls(true);

		analiseQuantitativa.setName("analiseQuantitativaPainel");

		analiseQuantitativa.setToolTipText("Analise Quantitativa");	

		LineBorder border = new LineBorder(Color.GRAY);


		//***********************question 01****************************************************************************************************

		c.fill = GridBagConstraints.HORIZONTAL;		
		c.gridwidth = GridBagConstraints.REMAINDER;


		imageIconProposta = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

		imageIconProposta.setImage(imageIconProposta.getImage().getScaledInstance(28, 28, 10));

		labelProposta = new JLabel(imageIconProposta);	

		final JLabel txtProposta= new JLabel(" 1.0 Faltam paginas do contrato");

		txtProposta.setBorder(border);	
		
		txtProposta.setName("nao");

		txtProposta.setIcon(imageIconProposta);	

		analiseQuantitativa.add(txtProposta,c);

		txtProposta.addMouseListener(new MouseAdapter() 
		{
			@Override
			public void mouseClicked(MouseEvent e) 
			{

				if(txtProposta.getName().equals("nao")){
					
					imageIconProposta = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 yes.png");

					imageIconProposta.setImage(imageIconProposta.getImage().getScaledInstance(28, 28, 10));
					
					txtProposta.setName("sim");

					txtProposta.setIcon(imageIconProposta);

				}else{

					imageIconProposta = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

					imageIconProposta.setImage(imageIconProposta.getImage().getScaledInstance(28, 28, 10));

					txtProposta.setIcon(imageIconProposta);
					
					txtProposta.setName("nao");
				}

			}
		});

		//********************question 02*******************************************************************************************************	

		imageIconDocumento = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

		imageIconDocumento.setImage(imageIconDocumento.getImage().getScaledInstance(28, 28, 10));

		labelDocumento = new JLabel(imageIconDocumento);		

		final JLabel txtDocumento = new JLabel(" 1.1 Falta assinatura do Cliente");
		
		txtDocumento.setBorder(border);	
		
		txtDocumento.setName("nao");

		txtDocumento.setIcon(imageIconDocumento);

		analiseQuantitativa.add(txtDocumento,c);


		txtDocumento.addMouseListener(new MouseAdapter() 
		{
			@Override
			public void mouseClicked(MouseEvent e) 
			{

				if(txtDocumento.getName().equals("nao")){
					
					imageIconDocumento = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 yes.png");

					imageIconDocumento.setImage(imageIconDocumento.getImage().getScaledInstance(28, 28, 10));

					txtDocumento.setIcon(imageIconDocumento);	
					
					txtDocumento.setName("sim");

				}else{

					imageIconDocumento = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

					imageIconDocumento.setImage(imageIconDocumento.getImage().getScaledInstance(28, 28, 10));

					txtDocumento.setIcon(imageIconDocumento);	
					
					txtDocumento.setName("nao");
				}
			}
		});


		//********************question 03******************************************************************************************************		

		imageIconComprovante = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

		imageIconComprovante.setImage(imageIconComprovante.getImage().getScaledInstance(28, 28, 10));

		labelconComprovante = new JLabel(imageIconComprovante);		

		final JLabel txtComprovante = new JLabel(" 1.3 Faltam as 2 Assinaturas das testemunhas");

		txtComprovante.setIcon(imageIconProposta);
		
		txtComprovante.setBorder(border);
		
		txtComprovante.setName("nao");

		analiseQuantitativa.add(txtComprovante,c);

		txtComprovante.addMouseListener(new MouseAdapter() 
		{
			@Override
			public void mouseClicked(MouseEvent e) 
			{

				if(txtComprovante.getName().equals("nao")){
					
				imageIconComprovante = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 yes.png");

				imageIconComprovante.setImage(imageIconComprovante.getImage().getScaledInstance(28, 28, 10));

				txtComprovante.setIcon(imageIconComprovante);	
				
				txtComprovante.setName("sim");
				
				}else{
					
					imageIconComprovante = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

					imageIconComprovante.setImage(imageIconComprovante.getImage().getScaledInstance(28, 28, 10));

					txtComprovante.setIcon(imageIconComprovante);	
					
					txtComprovante.setName("nao");
				}
			}
		});


		//********************question 04*******************************************************************************************************************	

		imageIconExames = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

		imageIconExames.setImage(imageIconExames.getImage().getScaledInstance(28, 28, 10));

		labelIconimageIconExames = new JLabel(imageIconExames);	

		final JLabel txtExames = new JLabel(" 1.4 Assinatura do Cliente Ilegivel");

		txtExames.setIcon(imageIconProposta);
		
		txtExames.setBorder(border);
		
		txtExames.setName("nao");

		analiseQuantitativa.add(txtExames,c);

		txtExames.addMouseListener(new MouseAdapter() 
		{
			@Override
			public void mouseClicked(MouseEvent e) 
			{

				if(txtExames.getName().equals("nao")){
					
				imageIconExames = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 yes.png");

				imageIconExames.setImage(imageIconExames.getImage().getScaledInstance(28, 28, 10));

				txtExames.setIcon(imageIconExames);	
				
				txtExames.setName("sim");
				
				}else{
					
					imageIconExames = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

					imageIconExames.setImage(imageIconExames.getImage().getScaledInstance(28, 28, 10));

					txtExames.setIcon(imageIconExames);
					
					txtExames.setName("nao");
				}
			}
		});
		
		//********************question 05*******************************************************************************************************************	



		imageIconDeclaracao = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

		imageIconDeclaracao.setImage(imageIconDeclaracao.getImage().getScaledInstance(28, 28, 10));

		labelIconimageIconDeclaracao = new JLabel(imageIconDeclaracao);	

		final JLabel txtDeclaracao = new JLabel(" 1.5 Declaração do Cliente esta preenchido");

		txtDeclaracao.setIcon(imageIconProposta);
		
		txtDeclaracao.setBorder(border);
		
		txtDeclaracao.setName("nao");

		analiseQuantitativa.add(txtDeclaracao,c);

		txtDeclaracao.addMouseListener(new MouseAdapter() 
		{
			@Override
			public void mouseClicked(MouseEvent e) 
			{

				if(txtDeclaracao.getName().equals("nao")){

					imageIconDeclaracao = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 yes.png");

					imageIconDeclaracao.setImage(imageIconDeclaracao.getImage().getScaledInstance(28, 28, 10));

					txtDeclaracao.setIcon(imageIconDeclaracao);	

					txtDeclaracao.setName("sim");

				}else{
					
					imageIconDeclaracao = new ImageIcon("C:\\Ambiente\\SideEffect\\ECM_MetaSolutions\\src\\com\\br\\meta\\ecm\\img\\01 no.png");

					imageIconDeclaracao.setImage(imageIconDeclaracao.getImage().getScaledInstance(28, 28, 10));

					txtDeclaracao.setIcon(imageIconDeclaracao);
					
					txtDeclaracao.setName("nao");
				}
			}
		});

		//***********************************************************************************************************************************************	

		TitledBorder titledBorder = BorderFactory.createTitledBorder(border, " Analise Quantitativa ",2,TitledBorder.CENTER);	

		JScrollPane scrollAnaliseQuantitativa = new JScrollPane(analiseQuantitativa);

		scrollAnaliseQuantitativa.setBorder(titledBorder);

		scrollAnaliseQuantitativa.setViewportView(analiseQuantitativa);

		scrollAnaliseQuantitativa.setAutoscrolls(true);

		scrollAnaliseQuantitativa.setName("analiseQuantitativa");

		scrollAnaliseQuantitativa.setBounds(1350, 245, 250, 300);

		scrollAnaliseQuantitativa.setAlignmentX(10);

		scrollAnaliseQuantitativa.setAlignmentY(10);

		return scrollAnaliseQuantitativa;
	}

}
